---

- name: Fetch sarek configs from nf-core
  command: "{{ nf_core_env }}/bin/nf-core -v download sarek --compress none --outdir {{ sarek_dest }} --release {{ sarek_tag }}"
  environment:
    PATH: "{{ nf_core_env }}/bin:{{ ansible_env.PATH }}"
  args:
    chdir: "{{ sw_path }}"

- name: Create sarek containers folder and temp/cache for images
  file: name="{{ item }}" state=directory mode=g+s
  with_items:
  - "{{ sarek_containers }}"
  - "{{ sarek_containers }}/singularity_cache"
  - "{{ sarek_containers }}/singularity_temp"

- name: Pull sarek Singularity image
  command: "singularity pull --name sarek-{{ sarek_tag }}.img {{ sarek_containers_repo }}/sarek:{{ sarek_tag }}"
  environment:
    SINGULARITY_CACHEDIR: "{{ sarek_containers }}/singularity_cache"
    SINGULARITY_TMPDIR: "{{ sarek_containers }}/singularity_temp"
  args:
    chdir: "{{ sarek_containers }}"
    creates: "{{ sarek_containers }}/sarek-{{ sarek_tag }}.img"
  ignore_errors: true

- name: Pull sarekvep, sareksnpeff Singularity images
  command: "singularity pull --name {{ item.0 }}-{{ sarek_tag }}.{{ item.1 }}.img {{ sarek_containers_repo }}/{{ item.0 }}:{{ sarek_tag }}.{{ item.1 }}"
  environment:
    SINGULARITY_CACHEDIR: "{{ sarek_containers }}/singularity_cache"
    SINGULARITY_TMPDIR: "{{ sarek_containers }}/singularity_temp"
  args:
    chdir: "{{ sarek_containers }}"
    creates: "{{ sarek_containers }}/{{ item.0 }}-{{ sarek_tag }}.{{ item.1 }}.img"
  with_nested:
    - "{{ sarek_genome_specific_containers }}"
    - "{{ sarek_genomes }}"
  ignore_errors: true

- name: Remove sarek containers temp directories
  file: name="{{ item }}" state=absent
  with_items:
  - "{{ sarek_containers }}/singularity_cache"
  - "{{ sarek_containers }}/singularity_temp"

- name: Create sarek config
  template:
    src: "sarek.config.j2"
    dest: "{{ ngi_pipeline_conf }}/sarek_irma.config"

- name: Set alias for pipeline
  lineinfile:
    dest: "{{ ngi_pipeline_conf }}/{{ item.script }}"
    line: >
          alias sarek='nextflow run {{ sarek_dest }}/workflow/ \
          -profile uppmax --project {{ item.project_id }} \
          -c {{ ngi_pipeline_conf }}/nextflow_irma_{{ item.site }}.config \
          -c {{ ngi_pipeline_conf }}/sarek_irma.config \
          --custom_config_base {{ sarek_dest }}/configs/'
    backup: no
  with_items:
    - { site: "sthlm", script: "{{ bash_env_sthlm_script }}", project_id: "{{ ngi_pipeline_sthlm_delivery }}" }
    - { site: "upps", script: "{{ bash_env_upps_script }}", project_id: "{{ ngi_pipeline_upps_delivery }}" }

- name: Store SAREK tool version in deployment
  lineinfile:
    dest: "{{ deployed_tool_versions }}"
    line: "sarek: {{ sarek_tag }}"
