--- 

  - block: 
    # This is an ugly hack that sets the permissions correctly to g+rwX,o=rX
    # for all files that is owned by the current user that is running the playbook. 
    # We append permissions to g so that we do not override setgid flag set 
    # on some places (+s). We define permissions for others via o= as we
    # know that they shouldn't have any other permissions. 
    #
    # Note that this by purpose will miss changing the permissions of files
    # owned by an other user, as we do not want to have the playbook cluttered
    # with a lot of errors when the permission change fails.
    #
    # It is therefore expected that this script will always be run when someone is 
    # running the playbook.
    - name: set correct file permission for everything owned by current user 
      shell: "find {{ root_path }}/{conf,sw,resources} -user `whoami` -exec chmod g+rwX,o=rX {} \\;"

    - name: symlink deployed version to /lupus/ngi/<production|staging>/latest 
      file: dest="/lupus/ngi/{{ deployment_environment }}/latest" src="{{ root_path }}" state=link
    when: deployment_environment != "devel" 

  - block:
    - name: Make wildwest directory editable by anyone that can access irma
      shell: "find {{ proj_root }} -user `whoami` -exec chmod g+rwXs,o=rwX {} \\;"
    when: deployment_environment == "staging"
  
  - block:
    - name: Try to get irma_provision latest version
      command: git rev-parse HEAD
      register: irma_provision_version

    - name: Add irma_provision version to deployed tools files
      lineinfile:
        dest: "{{ deployed_tool_versions }}"
        line: "-- Deployed at {{ ansible_date_time.iso8601 }} by irma_provision ({{ irma_provision_version.stdout }}) --"
      when: "'{{ irma_provision_version.stdout }}'"

    # Create an alias to easily get the deployed tools version
    # not using 'blockinline' to avoid ansible markers
    - name: Create alias 'deployed_env'
      lineinfile:
        dest: "{{ ngi_pipeline_conf }}/{{ bash_env_script }}"
        line: "{{ item }}"
      with_items:
        - "#alias to get versions for tools installed in the current deployment"
        - "alias deployed_env='cat {{ deployed_tool_versions }}'"

  - debug: msg="Finished deploying to {{ root_path }}"

