---
- name: Fetch non-SciLifeLab repos from GitHub
  git: repo="{{ item.repo }}"
       dest="{{ item.dest }}"
       version="{{ item.version }}"
  with_items:
  -  { repo: "{{ frc_align_repo }}", dest: "{{ frc_align_dest }}", version: "{{ frc_align_version }}" }

# Replaced by nougat singularity images
# Keeping for fallback purposes
#
#- name: Create FRC_Align build directory
#  file: path="{{ frc_align_dest }}/build" state=directory mode=g+rwxs
#
#- name: Make FRC_Align
#  shell: "module load boost && cmake .."
#  args: 
#    chdir: "{{ frc_align_dest }}/build"
#    creates: "{{ frc_align_dest }}/LICENSE"  
#
#- name: Fetch KmerGenie
#  get_url:
#    url: "{{ kmer_source }}/{{ kmer_version }}.tar.gz"
#    dest: "/scratch/{{ kmer_version }}.tar.gz"

#Added permission to make it easily removed.
- name: Unpack KmerGenie
  unarchive:
    src: "/scratch/{{ kmer_version }}.tar.gz"
    dest: "/scratch/"
    copy: no
    mode: 0755

- name: Create KmerGenie installation directory
  command: mv "/scratch/{{ kmer_version }}" "{{ kmer_dest }}"
  args:
    creates: "{{ kmer_dest }}"
    removes: "/scratch/{{ kmer_version }}"

- name: Install Kmergenie
  shell: "make"
  args:
    chdir: "{{ kmer_dest }}"

- name: Fix KmerGenie permission issue
  file:
    path: "{{ kmer_dest }}/kmergenie"
    state: touch
    mode: "u+rwx"

- name: Add KmerGenie to $PATH
  lineinfile: dest={{ ngi_pipeline_conf }}/{{ bash_env_script }}
              line='export PATH={{ kmer_dest }}:$PATH'
              backup=no

- name: Create NouGAT Singularity folder and sub folders for each container
  file: name="{{ nougat_containers_path }}/{{ item.name }}" state=directory mode=g+s
  with_items:
      - "{{ nougat_containers_info }}"

- name: Download nougat singularity images
  command: singularity pull --name "{{ item.name }}.simg" "{{ item.url }}"
  environment:
    SINGULARITY_CACHEDIR: "{{ nougat_containers_path }}/singularity_cache"
    SINGULARITY_TMPDIR: "{{ nougat_containers_path }}/singularity_temp"
  args:
    chdir: "{{ nougat_containers_path }}/{{ item.name }}"
  with_items:
      - "{{ nougat_containers_info }}"

- name: Remove Nougat singularity cache directories
  file: name="{{ item }}" state=absent
  with_items:
  - "{{ nougat_containers_path }}/singularity_cache"
  - "{{ nougat_containers_path }}/singularity_temp"

#Mode change to give scripts execute rights
- name: Create image-run scripts
  template: src="Singularity_runtime_script.j2" dest="{{ nougat_containers_path }}/{{ item.0.name }}/{{ item.1 }}" mode=0775
  with_subelements:
      - "{{ nougat_containers_info }}"
      - exec

- name: Copy Nougat paths configuration
  template: src="NouGAT_paths.yaml.j2" dest="{{ ngi_pipeline_conf }}/NouGAT_paths.yaml"

