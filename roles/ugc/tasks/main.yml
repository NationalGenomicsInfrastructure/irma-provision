- name: create virtual python env for ugc delivery 
  shell: "{{ conda_bin }} create --name {{ ugc_delivery_env_name }} python=2.7"
  args: 
    creates: "{{ ugc_delivery_env_path }}"

- name: get ugc-delivery from git
  git:
    repo: "{{ delivery_repo }}"
    dest: "{{ delivery_src }}" 
    version: "{{ delivery_version }}"

- name: install ugc delivery requirements
  pip:
    virtualenv: "{{ ugc_delivery_env_path }}"
    requirements: "{{ delivery_src }}/requirements.txt"
    extra_args: "-U"
    state: present

- name: install ugc delivery into venv
  copy: src="{{ delivery_src }}/deliver.py" dest="{{ ugc_delivery_env_path }}/bin/" 

- name: ensure conf dir exists 
  file: path="{{ ngi_pipeline_conf }}" state=directory

- name: deploy ugc bash env file 
  template: src="sourceme_ugc.sh.j2" dest="{{ ngi_pipeline_conf }}/sourceme_ugc.sh"

- name: try to get ugc-delivery commit version
  command: git rev-parse HEAD
  args:
    chdir: "{{ delivery_src }}"
  register: delivery_version
  ignore_errors: true

- name: Store ugc-delivery tool version in deployment
  lineinfile:
    dest: "{{ deployed_tool_versions }}"
    line: "ugc-delivery: {{ delivery_version.stdout }}"
  when: "'{{ delivery_version.stdout }}'"
