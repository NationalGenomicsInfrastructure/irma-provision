---

# FIXME: One system dependency that is missing atm is PyXML. 
# See if everything works well anyway. 

# Override the value from defaults so we get prod/stage specific path
- set_fact: 
    sisyphus_path: "{{ arteria_siswrap_env_root }}/deps/sisyphus/"

- name: create arteria perllib dir 
  file: path="{{ perllib_dest }}" state=directory mode=g+s 

- name: install File::NFSLock
  cpanm: name=File::NFSLock locallib="{{ perllib_dest }}"

- name: install XML::LibXML
  shell: "PATH={{ cpanm_env }} cpanm -l {{ perllib_dest }} XML::LibXML"
  args: 
    creates: "{{ perllib_dest }}/lib/perl5/x86_64-linux-thread-multi/XML/LibXML.pm"

- name: install XML::LibXML::Common
  cpanm: name=XML::LibXML::Common locallib="{{ perllib_dest }}"

- name: install XML::NamespaceSupport
  cpanm: name=XML::NamespaceSupport locallib="{{ perllib_dest }}"

- name: install XML::SAX
  cpanm: name=XML::SAX locallib="{{ perllib_dest }}"

- name: install XML::Simple
  cpanm: name=XML::Simple locallib="{{ perllib_dest }}"

- name: install Archive::Zip
  cpanm: name=Archive::Zip locallib="{{ perllib_dest }}"

- name: install PerlIO::gzip
  cpanm: name=PerlIO::gzip locallib="{{ perllib_dest }}"
  
  # TODO: This is a bit hacky, but at the moment we need to skip 
  # tests for some modules, as otherwise PDL fails to build. 
- name: manually force-install PDL dependencies that fail tests 
  cpanm: name="{{ item }}" locallib="{{ perllib_dest }}" notest=yes
  with_items: 
    - "Inline::C"
    - "List::MoreUtils"

- name: install PDL
  cpanm: name=PDL locallib="{{ perllib_dest }}"

- name: install XML::LibXSLT
  shell: "PATH={{ cpanm_env }} cpanm -l {{ perllib_dest }} XML::LibXSLT"
  args:
    creates: "{{ perllib_dest }}/lib/perl5/x86_64-linux-thread-multi/XML/LibXSLT.pm"

- name: create sisyphus code folder
  file: path="{{ sisyphus_path }}" state=directory mode=g+s

- name: get sisyphus code
  git: repo="{{ sisyphus_git_repo }}" version="{{ sisyphus_repo_branch }}" dest="{{ sisyphus_path }}/sisyphus-tmp" update=yes

- name: get sisyphus version
  command: git --git-dir="{{ sisyphus_path }}/sisyphus-tmp/.git" describe --tags
  register: sisyphus_version

- name: check if latest sisyphus version folder exists
  stat: path="{{ sisyphus_path }}/sisyphus-{{ sisyphus_version.stdout }}"
  register: latest_sisyphus_version_folder

- name: copy latest version to correct named folder
  command: "cp -r {{ sisyphus_path }}/sisyphus-tmp {{ sisyphus_path }}/sisyphus-{{ sisyphus_version.stdout }}"
  when: not latest_sisyphus_version_folder.stat.exists

- name: remove sisyphus-tmp
  file: path="{{ sisyphus_path }}/sisyphus-tmp" state=absent

- name: ensure latest version is globally readable and owned by proper user 
  file: state=directory path="{{ sisyphus_path }}/sisyphus-{{ sisyphus_version.stdout }}" mode=775 recurse=yes

- name: setup link to sisyphus latest
  file: state=link src="{{ sisyphus_path }}/sisyphus-{{ sisyphus_version.stdout }}" dest="{{ sisyphus_path }}/sisyphus-latest" mode=775

