---
# NOTE: STATUSDB IS A REQUIREMENT, BUT CURRENTLY CONFIG IS ONLY PROVIDED FOR NORMAL TACA-NGI-PIPELINE. THIS IS ACCEPTABLE
- name: Copy SNIC-SUPR credentials
  copy: src="files/{{ snic_sthlm_creds }}" dest="{{ ngi_pipeline_conf }}/{{ snic_sthlm_creds }}"

- name: Add SUPR credentials envvar to sourceme 
  lineinfile: dest="{{ ngi_pipeline_conf }}/{{ bash_env_sthlm_script }}"
              line="export SNIC_API_STOCKHOLM={{ ngi_pipeline_conf }}/{{ snic_sthlm_creds }}"
              backup=no

- name: Copy Orderportal credentials
  copy: src="files/{{ orderportal_creds }}" dest="{{ ngi_pipeline_conf }}/{{ orderportal_creds }}"

- name: Add Orderportal credentials envvar to sourceme
  lineinfile: dest="{{ ngi_pipeline_conf }}/{{ bash_env_sthlm_script }}"
              line="export ORDER_PORTAL={{ ngi_pipeline_conf }}/{{ orderportal_creds }}"
              backup=no

- name: Fetch statusdb from GitHub
  git: repo="{{ statusdb_repo }}"
       dest="{{ statusdb_dest }}"
       version="{{ statusdb_version }}"
       force=yes

- name: Install statusdb requirements
  shell: "{{ ngi_pipeline_venv }}/bin/pip install -r {{ statusdb_dest }}/requirements.txt"

- name: Install statusDB
  shell: "{{ ngi_pipeline_venv }}/bin/pip install ."
  args:
    chdir: "{{ statusdb_dest }}"

- name: Copy statusDB credentials
  copy: src="files/{{ statusdb_creds }}" dest="{{ ngi_pipeline_conf }}/{{ statusdb_creds }}"

- name: Add statusDB envvar to sourceme 
  lineinfile: dest={{ ngi_pipeline_conf }}/{{ bash_env_sthlm_script }}
              line="export STATUS_DB_CONFIG={{ ngi_pipeline_conf }}/{{ statusdb_creds }}"
              backup=no

- name: Fetch flowcell_parser from GitHub
  git: repo="{{ flowcell_parser_repo }}"
       dest="{{ flowcell_parser_dest }}"
       version="{{ flowcell_parser_version }}"
       force=yes

- name: Install flowcell_parser requirements
  shell: "{{ ngi_pipeline_venv }}/bin/pip install -r {{ flowcell_parser_dest }}/requirements.txt"

- name: Install flowcell_parser
  shell: "{{ ngi_pipeline_venv }}/bin/pip install ."
  args:
    chdir: "{{ flowcell_parser_dest }}"

- name: Fetch TACA from GitHub
  git: repo="{{ taca_repo }}"
       dest="{{ taca_dest }}"
       version="{{ taca_version }}"
       force=yes

- name: Install TACA requirements
  shell: "{{ ngi_pipeline_venv }}/bin/pip install -r {{ taca_dest }}/requirements.txt"

- name: Install TACA
  shell: "{{ ngi_pipeline_venv }}/bin/pip install ."
  args:
    chdir: "{{ taca_dest }}"
